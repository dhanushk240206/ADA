#include <stdio.h>

int max(int a, int b) {
    return (a > b) ? a : b;
}

void knapsack(int W, int wt[], int val[], int n) {
    int K[n+1][W+1];
    for (int i = 0; i <= n; i++) {
        for (int w = 0; w <= W; w++) {
            if (i == 0 || w == 0)
                K[i][w] = 0;
            else if (wt[i-1] <= w)
                K[i][w] = max(val[i-1] + K[i-1][w - wt[i-1]], K[i-1][w]);
            else
                K[i][w] = K[i-1][w];
        }
    }

    printf("\nDP Table (Rows: items, Columns: capacity):\n");
    printf("   ");
    for (int w = 0; w <= W; w++) {
        printf("%3d ", w);
    }
    printf("\n");
    for (int i = 0; i <= n; i++) {
        if(i == 0)
            printf("0: ");
        else
            printf("%d: ", i);
        for (int w = 0; w <= W; w++) {
            printf("%3d ", K[i][w]);
        }
        printf("\n");
    }

    printf("\nMaximum value in knapsack = %d\n", K[n][W]);
}

int main() {
    int n, W;
    printf("Enter number of items: ");
    scanf("%d", &n);
    int val[n], wt[n];
    printf("Enter values and weights:\n");
    for (int i = 0; i < n; i++)
        scanf("%d %d", &val[i], &wt[i]);
    printf("Enter knapsack capacity: ");
    scanf("%d", &W);
    knapsack(W, wt, val, n);
    return 0;
}
